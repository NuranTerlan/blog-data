{
  "posts": [
    {
        "id": 9,
        "title": "17 things you never knew about react?!",
        "body": "One of the stated goals of Next.js from the very beginning was to bring back and preserve the simplicity of the Web. Server-rendering, a simple and agnostica approach to data fetching and declarative pages based on the filesystem structure are some of the features we introduced in line with this thinking. A frequently overlooked aspect of web services and web sites is how naturally composable and scalable they are. For example, mydomain.com/settings and mydomain.com/ could be two entirely different apps, deployed independently, scaled independently, even running different versions of the same software. All it takes to glue them together into a uniform experience for the end-user is some simple configuration of the backend routing layer or load balancers that expose them to the world. We are very happy to now bring the ability to compose multiple applications built with Next.js, connected together using normal <Link> components. We call this feature Zones. One of the stated goals of Next.js from the very beginning was to bring back and preserve the simplicity of the Web."
      },
      {
        "id": 8,
        "title": "10 things only experts know about C#",
        "body": "One of the stated goals of Next.js from the very beginning was to bring back and preserve the simplicity of the Web. Server-rendering, a simple and agnostica approach to data fetching and declarative pages based on the filesystem structure are some of the features we introduced in line with this thinking. A frequently overlooked aspect of web services and web sites is how naturally composable and scalable they are. For example, mydomain.com/settings and mydomain.com/ could be two entirely different apps, deployed independently, scaled independently, even running different versions of the same software. All it takes to glue them together into a uniform experience for the end-user is some simple configuration of the backend routing layer or load balancers that expose them to the world. We are very happy to now bring the ability to compose multiple applications built with Next.js."
      },
      {
        "id": 7,
        "title": "This new way to use problem solving is epic",
        "body": "One of the stated goals of Next.js from the very beginning was to bring back and preserve the simplicity of the Web. Server-rendering, a simple and agnostica approach to data fetching and declarative pages based on the filesystem structure are some of the features we introduced in line with this thinking. A frequently overlooked aspect of web services and web sites is how naturally composable and scalable they are. For example, mydomain.com/settings and mydomain.com/ could be two entirely different apps, deployed independently, scaled independently, even running different versions of the same software. All it takes to glue them together into a uniform experience for the end-user is some simple configuration of the backend routing layer or load balancers that expose them to the world. We are very happy to now bring the ability to compose multiple applications built with Next.js, connected together using normal <Link> components. We call this feature Zones. One of the stated goals of Next.js from the very beginning was to bring back and preserve the simplicity of the Web."
      },
      {
        "id": 6,
        "title": "The Incredible story of programming",
        "body": "One of the stated goals of Next.js from the very beginning was to bring back and preserve the simplicity of the Web. Server-rendering, a simple and agnostica approach to data fetching and declarative pages based on the filesystem structure are some of the features we introduced in line with this thinking. A frequently overlooked aspect of web services and web sites is how naturally composable and scalable they are. For example, mydomain.com/settings and mydomain.com/ could be two entirely different apps, deployed independently, scaled independently, even running different versions of the same software. All it takes to glue them together into a uniform experience for the end-user is some simple configuration of the backend routing layer or load balancers that expose them to the world. We are very happy to now bring the ability to compose multiple applications built with Next.js."
      },
      {
        "id": 5,
        "title": "5 things you should do to become Backend Master!",
        "body": "One of the stated goals of Next.js from the very beginning was to bring back and preserve the simplicity of the Web. Server-rendering, a simple and agnostica approach to data fetching and declarative pages based on the filesystem structure are some of the features we introduced in line with this thinking. A frequently overlooked aspect of web services and web sites is how naturally composable and scalable they are. For example, mydomain.com/settings and mydomain.com/ could be two entirely different apps, deployed independently, scaled independently, even running different versions of the same software. All it takes to glue them together into a uniform experience for the end-user is some simple configuration of the backend routing layer or load balancers that expose them to the world. We are very happy to now bring the ability to compose multiple applications built with Next.js, connected together using normal <Link> components. We call this feature Zones. One of the stated goals of Next.js from the very beginning was to bring back and preserve the simplicity of the Web."
      },
      {
        "id": 4,
        "title": "This new way to use problem solving is epic",
        "body": "One of the stated goals of Next.js from the very beginning was to bring back and preserve the simplicity of the Web. Server-rendering, a simple and agnostica approach to data fetching and declarative pages based on the filesystem structure are some of the features we introduced in line with this thinking. A frequently overlooked aspect of web services and web sites is how naturally composable and scalable they are. For example, mydomain.com/settings and mydomain.com/ could be two entirely different apps, deployed independently, scaled independently, even running different versions of the same software. All it takes to glue them together into a uniform experience for the end-user is some simple configuration of the backend routing layer or load balancers that expose them to the world. We are very happy to now bring the ability to compose multiple applications built with Next.js."
      },
      {
        "id": 3,
        "title": "17 things you never knew about react?!",
        "body": "One of the stated goals of Next.js from the very beginning was to bring back and preserve the simplicity of the Web. Server-rendering, a simple and agnostica approach to data fetching and declarative pages based on the filesystem structure are some of the features we introduced in line with this thinking. A frequently overlooked aspect of web services and web sites is how naturally composable and scalable they are. For example, mydomain.com/settings and mydomain.com/ could be two entirely different apps, deployed independently, scaled independently, even running different versions of the same software. All it takes to glue them together into a uniform experience for the end-user is some simple configuration of the backend routing layer or load balancers that expose them to the world. We are very happy to now bring the ability to compose multiple applications built with Next.js, connected together using normal <Link> components. We call this feature Zones. One of the stated goals of Next.js from the very beginning was to bring back and preserve the simplicity of the Web."
      },
      {
        "id": 2,
        "title": "10 things only experts know about C#",
        "body": "One of the stated goals of Next.js from the very beginning was to bring back and preserve the simplicity of the Web. Server-rendering, a simple and agnostica approach to data fetching and declarative pages based on the filesystem structure are some of the features we introduced in line with this thinking. A frequently overlooked aspect of web services and web sites is how naturally composable and scalable they are. For example, mydomain.com/settings and mydomain.com/ could be two entirely different apps, deployed independently, scaled independently, even running different versions of the same software. All it takes to glue them together into a uniform experience for the end-user is some simple configuration of the backend routing layer or load balancers that expose them to the world. We are very happy to now bring the ability to compose multiple applications built with Next.js."
      },
      {
        "id": 1,
        "title": "5 things you should do to become Frontend Master!",
        "body": "One of the stated goals of Next.js from the very beginning was to bring back and preserve the simplicity of the Web. Server-rendering, a simple and agnostica approach to data fetching and declarative pages based on the filesystem structure are some of the features we introduced in line with this thinking. A frequently overlooked aspect of web services and web sites is how naturally composable and scalable they are. For example, mydomain.com/settings and mydomain.com/ could be two entirely different apps, deployed independently, scaled independently, even running different versions of the same software. All it takes to glue them together into a uniform experience for the end-user is some simple configuration of the backend routing layer or load balancers that expose them to the world. We are very happy to now bring the ability to compose multiple applications built with Next.js."
      }
  ]
}
